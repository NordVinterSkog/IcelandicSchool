{"version":3,"sources":["Message.js","Intro.js","App.js","serviceWorker.js","index.js"],"names":["Message","props","lang","Intro","className","App","state","ready","image","email","nick","password","wait","fields","validation","country","all","errors","changeLanguage","e","target","id","filter","field","error","setState","handleInput","console","log","value","validate","preventDefault","indexOf","length","fetch","then","results","json","hits","Math","floor","random","largeImageURL","setTimeout","style","backgroundImage","this","onClick","src","alt","action","type","onChange","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.767b34c3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Message = props => {\r\n  if (props.lang === \"pl\")\r\n    return (\r\n      <h3>\r\n        Witamy na kursie języka islandzkiego dla początkujących! Załóż konto by\r\n        zacząć naukę.\r\n      </h3>\r\n    );\r\n  if (props.lang === \"en\")\r\n    return (\r\n      <h3>\r\n        Welcome to our Icelandic course for beginners! Please create an account\r\n        to proceed.\r\n      </h3>\r\n    );\r\n  if (props.lang === \"no\")\r\n    return (\r\n      <h3>\r\n        Velkommen til kurs i islandsk for nybegynnere! Skape gjerne kontoen for\r\n        at fortsette.\r\n      </h3>\r\n    );\r\n  if (props.lang === \"sw\")\r\n    return (\r\n      <h3>\r\n        Välkommen till kurs i isländska för nybörjare! Skapa gärna kontot för\r\n        att förtsätta.\r\n      </h3>\r\n    );\r\n  if (props.lang === \"de\")\r\n    return (\r\n      <h3>\r\n        Willkommen zu unserem Isländischkurs für Anfänger! Bitte erstellen Sie\r\n        ein Konto fortfahren.\r\n      </h3>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport \"./Intro.css\";\r\n\r\nconst Intro = () => {\r\n  return (\r\n    <div className=\"intro\">\r\n      <div className=\"flag\">\r\n        <div className=\"blue\"></div>\r\n        <div className=\"white X\"></div>\r\n        <div className=\"white Y\"></div>\r\n        <div className=\"red X\"></div>\r\n        <div className=\"red Y\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React, { Component } from \"react\";\nimport Message from \"./Message\";\nimport \"./App.css\";\nimport Intro from \"./Intro\";\n\nclass App extends Component {\n  state = {\n    ready: false,\n    lang: \"en\",\n    image: \"\",\n    email: \"\",\n    nick: \"\",\n    password: \"\",\n    wait: \"Please follow the link sent to your e-mail address.\",\n    fields: {\n      email: \"E-mail address\",\n      password: \"Password\"\n    },\n    validation: {\n      email: true,\n      nick: true,\n      country: true,\n      password: true,\n      all: false\n    },\n    errors: {\n      email: \"E-mail address must contain @.\",\n      nick: \"Nickname must be at least 6 characters long.\",\n      password:\n        \"Password must be at least 6 characters long and contain no spaces.\"\n    }\n  };\n\n  componentDidMount() {\n    fetch(\n      \"https://pixabay.com/api/?key=14976958-ee38bbe3e71cf647de563cf70&q=reykjavik&image_type=photo&pretty=true\"\n    )\n      .then(results => {\n        return results.json();\n      })\n      .then(results => {\n        let image = results.hits[Math.floor(Math.random() * 20)].largeImageURL;\n        this.setState({ image });\n      });\n  }\n\n  changeLanguage = e => {\n    let lang = e.target.id;\n    let fields = [\n      {\n        id: \"pl\",\n        email: \"Adres e-mail\",\n        password: \"Hasło\"\n      },\n      {\n        id: \"en\",\n        email: \"E-mail Address\",\n        password: \"Password\"\n      },\n      {\n        id: \"no\",\n        email: \"Epostadresse\",\n        password: \"Passord\"\n      },\n      {\n        id: \"sw\",\n        email: \"E-postadress\",\n        password: \"Lösenord\"\n      },\n      {\n        id: \"de\",\n        email: \"E-Mail-Addresse\",\n        password: \"Passwort\"\n      }\n    ];\n    fields = fields.filter(field => field.id === lang);\n    let errors = [\n      {\n        id: \"en\",\n        email: \"E-mail must contain @.\",\n        password:\n          \"Password must be at least 6 characters long and contain no spaces.\",\n        nick: \"Nickname must be at least 6 characters long.\",\n        wait: \"Please follow the link sent to your e-mail address.\"\n      },\n      {\n        id: \"pl\",\n        email: \"Adres e-mail musi zawierać @.\",\n        password:\n          \"Hasło musi mieć przynajmniej 6 znaków i nie może zawierać spacji.\",\n        nick: \"Pseudonim musi mieć przynajmniej 6 znaków.\",\n        wait: \"Proszę kliknąć w link wysłany na twój adres e-mail.\"\n      },\n      {\n        id: \"sw\",\n        email: \"E-postadress måste innehålla @.\",\n        password:\n          \"Lösenord  kan inte innehålla mellanslag och måste vara minst 6 tecken långt.\",\n        nick: \"Användarnamn ska vara minst 6 tecken långt.\",\n        wait: \"\"\n      },\n      {\n        id: \"no\",\n        email: \"Epostadress må inneholde @.\",\n        password: \"Løsningsord kan ikke inneholde mellomanslag.\",\n        nick: \"Brukernavn må være minst 6 tegn langt.\",\n        wait: \"\"\n      },\n      {\n        id: \"de\",\n        email: \"Die E-Mail-Adresse muss @ enthalten.\",\n        password:\n          \"Das Passwort muss mindestens 6 Zeichen lang sein und darf keine Leerzeichen enthalten.\",\n        nick: \"Der Spitzname muss mindestens 6 Zeichen lang sein.\",\n        wait: \"Bitte folgen Sie dem Link zu Ihrer E-Mail-Adresse.\"\n      }\n    ];\n    errors = errors.filter(error => error.id === lang);\n    this.setState({\n      lang,\n      fields: {\n        email: fields[0].email,\n        password: fields[0].password\n      },\n      errors: {\n        email: errors[0].email,\n        password: errors[0].password,\n        nick: errors[0].nick\n      },\n      wait: errors[0].wait\n    });\n  };\n\n  handleInput = e => {\n    console.log(e.target);\n    let value = e.target.value;\n    let id = e.target.id;\n    this.setState({\n      [id]: value\n    });\n  };\n\n  validate = e => {\n    e.preventDefault();\n    let email = false;\n    let nick = false;\n    let password = false;\n    let all = false;\n    if (this.state.email.indexOf(\"@\") !== -1) {\n      email = true;\n    }\n    if (this.state.nick.length > 5) {\n      nick = true;\n    }\n    if (\n      this.state.password.indexOf(\" \") === -1 &&\n      this.state.password.length > 5\n    ) {\n      password = true;\n    }\n\n    if (email && nick && password) {\n      all = true;\n    }\n\n    this.setState({\n      validation: {\n        email,\n        nick,\n        password,\n        all\n      }\n    });\n  };\n\n  render() {\n    setTimeout(() => {\n      this.setState({\n        ready: true\n      });\n    }, 9000);\n    return (\n      <div\n        className=\"app\"\n        style={{ backgroundImage: `url(${this.state.image})` }}\n      >\n        <div className=\"overlay\">\n          {this.state.ready ? (\n            <div className=\"active\">\n              {\" \"}\n              {this.state.validation.all ? (\n                <div className=\"ok\">{this.state.wait}</div>\n              ) : (\n                <div className=\"main\">\n                  <div className=\"langs\">\n                    <button id=\"pl\" onClick={this.changeLanguage}>\n                      <img\n                        id=\"pl\"\n                        src=\"https://restcountries.eu/data/pol.svg\"\n                        alt=\"\"\n                      />\n                    </button>\n                    <button id=\"en\" onClick={this.changeLanguage}>\n                      <img\n                        id=\"en\"\n                        src=\"https://restcountries.eu/data/gbr.svg\"\n                        alt=\"\"\n                      />\n                    </button>\n                    <button id=\"no\" onClick={this.changeLanguage}>\n                      <img\n                        id=\"no\"\n                        src=\"https://restcountries.eu/data/nor.svg\"\n                        alt=\"\"\n                      />\n                    </button>\n\n                    <button id=\"sw\" onClick={this.changeLanguage}>\n                      <img\n                        id=\"sw\"\n                        src=\"https://restcountries.eu/data/swe.svg\"\n                        alt=\"\"\n                      />\n                    </button>\n                  </div>\n                  <h1>Góðan daginn!</h1>\n                  <Message lang={this.state.lang} />\n                  <form action=\"\" id=\"form\">\n                    <p className=\"fieldName\">{this.state.fields.email}:</p>\n                    <input\n                      type=\"text\"\n                      className=\"email\"\n                      id=\"email\"\n                      value={this.state.email}\n                      onChange={this.handleInput}\n                    />\n\n                    <p\n                      className={\n                        this.state.validation.email === true ? null : \"active\"\n                      }\n                    >\n                      {this.state.errors.email}{\" \"}\n                    </p>\n\n                    <p className=\"fieldName\">Login:</p>\n                    <input\n                      type=\"text\"\n                      className=\"nick\"\n                      id=\"nick\"\n                      value={this.state.nick}\n                      onChange={this.handleInput}\n                    />\n\n                    <p\n                      className={\n                        this.state.validation.nick === true ? null : \"active\"\n                      }\n                    >\n                      {this.state.errors.nick}{\" \"}\n                    </p>\n                    <p className=\"fieldName\">{this.state.fields.password}:</p>\n                    <input\n                      type=\"password\"\n                      className=\"password\"\n                      id=\"password\"\n                      value={this.state.password}\n                      onChange={this.handleInput}\n                    />\n                    <p\n                      className={\n                        this.state.validation.password === true\n                          ? null\n                          : \"active\"\n                      }\n                    >\n                      {this.state.errors.password}{\" \"}\n                    </p>\n                    <button className=\"submit\" onClick={this.validate}>\n                      Start!\n                    </button>\n                  </form>\n                </div>\n              )}\n            </div>\n          ) : (\n            <Intro />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}